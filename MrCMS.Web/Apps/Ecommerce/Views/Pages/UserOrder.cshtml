@using MrCMS.Helpers
@using MrCMS.Web.Apps.Core.Pages
@using MrCMS.Web.Apps.Ecommerce.Entities.Orders
@using MrCMS.Web.Apps.Ecommerce.Helpers
@using MrCMS.Web.Apps.Ecommerce.Models
@model MrCMS.Web.Apps.Ecommerce.Pages.UserOrder
@{
    var order = ViewData["Order"] as Order;

    var orderShipping = order.ShippingTotal.GetValueOrDefault() - order.ShippingTax.GetValueOrDefault();

}

<div class="container">
    
    <div class="row-fluid">
        <div class="span12">
            <div class="pull-right btn-group">
                <a href="@(UniquePageHelper.GetUrl<UserAccountPage>())" class="btn " >Return to account</a>

                <a href="/Apps/Ecommerce/OrderPdf/ExportOrderToPdf/@order.Id" class="btn btn-primary" >Download PDF</a>
            </div>
            <br class="clearfix"/>
            <table class="table table-condensed table-striped">
                <tr>
                    <td>Order GUID</td>
                    <td>@order.Guid</td>
                </tr>
                <tr>
                    <td>Order Subtotal (ex TAX)</td>
                    <td>@order.Subtotal.ToCurrencyFormat()</td>
                </tr>
                <tr>
                    <td>Order Shipping (ex TAX)</td>
                    <td>@orderShipping.ToCurrencyFormat()</td>
                </tr>

                <tr>
                    <td>Order Tax</td>
                    <td>@order.Tax.ToCurrencyFormat()</td>
                </tr>
                <tr>
                    <td>Order Total</td>
                    <td>@order.Total.ToCurrencyFormat()</td>
                </tr>
            </table>
        </div>
    </div>


    @{
        if (order.OrderRefunds.Count > 0)
        {
        <div class="row-fluid">
            <div class="span12">
                @if (order.OrderRefunds.Count > 0)
                {
                    <p>Refunds:</p>
                    <table class="table table-bordered table-striped">
                        <thead>
                            <tr>
                                <th>Amount
                                </th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in order.OrderRefunds)
                            {
                                <tr>
                                    <td>
                                        @item.Amount.ToCurrencyFormat()
                                    </td>
                                </tr>
                            }
                        </tbody>
                    </table>
                }
            </div>
        </div>
        }
    }

    <hr class="small-margin" />
    <div class="row-fluid">
        <div class="span6">
            <h4>Payment</h4>

            <table class="table table-condensed">
                <tr>
                    <td>Method</td>
                    <td>@order.PaymentMethod</td>
                </tr>
                <tr>
                    <td>Status</td>
                    <td>@order.PaymentStatus</td>
                </tr>
            </table>
        </div>
        <div class="span6">
            <h4>Shipping</h4>

            <table class="table table-condensed">
                <tr>
                    <td>Method</td>
                    <td>@order.ShippingMethod.Name</td>
                </tr>
                <tr>
                    <td>Status</td>
                    <td>@order.ShippingStatus</td>
                </tr>
                @{
                    if (!string.IsNullOrEmpty(order.TrackingNumber))
                    {
                    <tr>
                        <td>Tracking Number</td>
                        <td>@order.TrackingNumber</td>
                    </tr>
                    }
                }
            </table>
        </div>
    </div>
    <hr />
    <div class="row-fluid">
        <div class="span6">
            <h4>Shipping Address
            </h4>
            <div class="pull-left">
                @if (order.ShippingAddress != null)
                {
                    @order.ShippingAddress.GetDescription()
                }
            </div>
        </div>
        <div class="span6">
            <h4>Billing Address
            </h4>
            <div class="pull-left">
                @if (order.BillingAddress != null)
                {
                    @order.BillingAddress.GetDescription()
                }
            </div>
        </div>
    </div>


    <hr />
    <h4>Order Items</h4>
    <div class="row-fluid">
        <div class="span12">
            @if (order.OrderLines.Count == 0)
            {
                @:No lines.
            }
            else
            {
                <table class="table table-striped table-condensed">
                    <thead>
                        <tr>
                            <th>Product
                            </th>
                            <th>SKU
                            </th>
                            <th>Quantity
                            </th>
                            <th>Unit Price
                            </th>
                            <th>Subtotal
                            </th>
                            <th>Tax
                            </th>
                            <th>Tax Rate
                            </th>
                            <th>Discount
                            </th>
                            <th>Weight
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in order.OrderLines)
                        {
                            <tr>
                                <td>
                                    @(String.IsNullOrWhiteSpace(item.ProductVariant.Name) ? item.ProductVariant.Product.Name : item.ProductVariant.Name)
                                </td>
                                <td>
                                    @item.ProductVariant.SKU
                                </td>
                                <td>
                                    @item.Quantity
                                </td>
                                <td>
                                    @item.UnitPrice.ToCurrencyFormat()
                                </td>
                                <td>
                                    @item.Subtotal.ToCurrencyFormat()
                                </td>
                                <td>
                                    @item.Tax.ToCurrencyFormat()
                                </td>
                                <td>
                                    @item.TaxRate.ToCurrencyFormat()
                                </td>
                                <td>
                                    @item.Discount.ToCurrencyFormat()
                                </td>
                                <td>
                                    @item.Weight.ToString("n2")
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>


</div>

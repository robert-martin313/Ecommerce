@using System.Drawing
@using FluentNHibernate.Conventions
@using MrCMS.Web.Apps.Ecommerce.Helpers
@using MrCMS.Web.Apps.Ecommerce.Models
@using MrCMS.Web.Apps.Ecommerce.Settings
@model ProductCardModel
<div class="col-lg-4 col-md-4 col-sm-4 col-xs-6 margin-bottom-30">
    <div class="product-con">
        <div class="product-image">
            @if (Model.ETag != null && !string.IsNullOrEmpty(Model.ETag.Image))
            {
                <a href="/@Model.Url" class="e-tag-image">
                    @RenderImage(Model.ETag.Image, attributes: new { @class = "img-responsive" })
                </a>
            }
            <a href="/@Model.Url">
                @RenderImage(Model.Image ?? SiteSettings<EcommerceSettings>().DefaultNoProductImage, new Size { Width = 200, Height = 175 }, attributes: new { @class = "img-responsive" })
            </a>
        </div>
        <div class="product-info margin-top-10">
            @if (Model.CanBuyStatus != null && Model.CanBuyStatus.OK)
            {
                <div class="padding-bottom-10">
                    @using (Html.BeginForm("Add", "AddToCart", FormMethod.Post))
                    {
                        @Html.Hidden("ProductVariant.Id", Model.VariantId)
                        @Html.Hidden("quantity", 1)
                        <button class="btn btn-primary" style="margin-left: 0;">Add to basket</button>
                    }
                </div>
            }
            <div class="product-name">
                <a href="/@Model.Url">@Model.Name</a>
            </div>
            @if (Model.ProductReviewsEnabled)
            {

                <div class="product-rating">
                    @if (Model.NumberOfReviews > 0)
                    {
                        Html.RenderPartial("ShowStarRating", Model.Rating);
                        @:(<a href="/@Model.Url#product-reviews"> @Model.NumberOfReviews </a>)
                    }
                    else
                    {
                        Html.RenderPartial("ShowStarRating", 0.00m);

                        @:(<a href="/@Model.Url#product-reviews"> 0 </a>)
                        @:<a href="/@Model.Url#product-reviews" class="first-to-review">@Resource("Product Reviews - Be the first","Be the first to review") </a>
                    }
                </div>
            }
            <div class="product-price">
                <span class="current-price">
                    @if (Model.IsMultiVariant)
                    {
                        @Resource("From: ")
                    }
                    @Model.Price.ToCurrencyFormat()
                </span>
                @if (Model.PreviousPrice.HasValue)
                {
                    <span class="old-price">
                        <span class="inner">
                            @(SiteSettings<EcommerceSettings>().PreviousPriceText) : @Model.PreviousPrice.ToCurrencyFormat()
                        </span>
                    </span>
                }
            </div>
        </div>
    </div>
</div>


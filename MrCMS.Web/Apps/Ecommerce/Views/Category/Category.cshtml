@model MrCMS.Web.Apps.Ecommerce.Pages.Category
@using MrCMS.Helpers

<ul class="breadcrumb">
    <li><a href="/">Home</a> <span class="divider">/</span></li>
    <li><a href="@(UniquePageHelper.GetUrl<MrCMS.Web.Apps.Ecommerce.Pages.CategoryContainer>())">Categories</a> <span class="divider">/</span></li>
    <li class="active">@Model.Name</li>
</ul>
@RenderZone("Before Content")
@Html.HiddenFor(x => x.Id)
@Html.HiddenFor(x => x.LiveUrlSegment)
<div class="row-fluid">
    <div class="span3">
        <div class="product-filter-box-title">
            Filter by Category
        </div>
        <div class="row-fluid">
            <ul class="nav nav-tabs nav-stacked">
                @foreach (var parent in (List<MrCMS.Web.Apps.Ecommerce.Pages.Category>)ViewBag.Categories)
                {
                    if (ViewBag.IsSubCategory == true)
                    {
                        if (parent.Id == Model.Parent.Id)
                        {
                    <li>
                        <a href="/@parent.UrlSegment">@parent.Name <i class="icon-chevron-right pull-right"></i></a>
                        @foreach (var childValue in parent.Children)
                        {
                            <a class="subitem" href="/@childValue.UrlSegment">@childValue.Name</a>
                        }
                    </li>
                        }
                        else
                        {
                    <li>
                        <a href="/@parent.LiveUrlSegment">@parent.Name <i class="icon-chevron-right pull-right"></i></a>
                    </li>
                        }
                    }
                    else if (parent.Id == Model.Id && ViewBag.IsSubCategory == false)
                    {
                    <li>
                        <a href="/@parent.UrlSegment">@parent.Name <i class="icon-chevron-right pull-right"></i></a>
                        @foreach (var childValue in parent.Children)
                        {
                            <a class="subitem" href="/@childValue.UrlSegment">@childValue.Name</a>
                        }
                    </li>
                    }
                    else
                    {
                    <li>
                        <a href="/@parent.LiveUrlSegment">@parent.Name <i class="icon-chevron-right pull-right"></i></a>
                    </li>
                    }
                }
            </ul>
        </div>
        <br />
        <div class="product-filter-box-title">
            Filter by Price
        </div>
        <div class="row-fluid">
            @Html.Hidden("product-price-range-min", (Int32)ViewBag.ProductPriceRangeMin)
            @Html.Hidden("product-price-range-max", (Int32)ViewBag.ProductPriceRangeMax)
            Price range from &pound;<span id="product-price-range-min-value">@ViewBag.ProductPriceRangeMin</span> - &pound;<span id="product-price-range-max-value">@ViewBag.ProductPriceRangeMax</span>
            <div id="slider-range" class="product-filter-box-slider"></div>
        </div>
        <br />
        @{
            Html.RenderPartial("SearchOptions", ViewBag.ProductOptions as List<MrCMS.Web.Apps.Ecommerce.Entities.Products.ProductAttributeOption>);
        }
        <br />
        @{
            Html.RenderPartial("SearchSpecifications", ViewBag.ProductSpecifications as List<MrCMS.Web.Apps.Ecommerce.Entities.Products.ProductSpecificationAttribute>);
        }
    </div>
    <div class="span9">
        <div id="products-operations">
            <div id="stats" class="pull-left"></div>
            <div id="show" class="pull-right">
                <label>Show</label>
                <select class="pull-right" id="options">
                    @foreach (var item in MrCMS.Website.MrCMSApplication.Get<MrCMS.Web.Apps.Ecommerce.Settings.EcommerceSettings>().CategoryProductsPerPage.Split(','))
                    {
                        <option value="@item">@item products per page</option>
                    }
                </select>
            </div>
            <div id="sorting" class="pull-right">
                <label>Sort by</label>
                <select class="pull-right" id="product-sorting-options">
                    <option value="1">Relevance</option>
                    <option value="2">Name A-Z</option>
                    <option value="3">Name Z-A</option>
                    <option value="4">Price Highest-Lowest</option>
                    <option value="5">Price Lowest-Highest</option>
                </select>
            </div>
        </div>
        @{Html.RenderAction("ProductResults", "Category", new { categoryId = Model.Id });}
    </div>
</div>

@{ Html.IncludeScript("~/Themes/Ecommerce/Content/Scripts/custom/category.js"); }
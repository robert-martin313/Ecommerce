@model MrCMS.Web.Apps.Ecommerce.Pages.Product
@using MrCMS.Helpers
@using System.Linq
@using MrCMS.Web.Apps.Ecommerce.Entities.Products
@using MrCMS.Web.Apps.Ecommerce.Helpers
@{
    var selectedVariant = ViewData["selected-variant"] as ProductVariant ?? Model.VariantsByPrice.First();
    var hasSpecifications = Model.SpecificationValues.Any();
}
@Html.HiddenFor(x => x.UrlSegment)
<div class="row-fluid">
    <div class="span8">
        <div class="row-fluid">
            <div class="span4">
                @{ Html.RenderPartial("ProductImages", Model); }
            </div>
            <div class="span8">
                <h1>@Model.Name</h1>

                <div class="product-price">
                    @selectedVariant.Price.ToCurrencyFormat()
                </div>
                @if (selectedVariant.PreviousPrice.HasValue)
                {
                    <span>
                        @Model.PreviousPriceText <span style="text-decoration: line-through">@selectedVariant.PreviousPrice.Value.ToCurrencyFormat()</span>
                    </span>
                }
                <p>
                    @Model.Abstract
                </p>

                @{Html.RenderPartial("SocialLinks");}
                
                @RenderZone("Below Product Price")
            </div>
        </div>
    </div>
    <div class="span4">
        @if (Model.IsMultiVariant)
        {
            <div class="product-variants-filter">
                @Html.DropDownList("variant", Model.VariantsByPrice.BuildSelectItemList(variant => variant.SelectOptionName, variant => variant.Id.ToString(), variant => variant == selectedVariant, emptyItem: null))
            </div>
        }

        @{Html.RenderPartial("ProductPricebreaks", Model);}

        @using (Html.BeginForm("AddToCart", "Cart", FormMethod.Post))
        {
            @Html.Hidden("Id", selectedVariant.Id)
            <div id="product-addtobasket">
                <label class="pull-left">Quantity&nbsp;</label>
                <input type="text" class="input-mini pull-left" value="1" id="quantity" name="quantity" />
                <button class="btn btn-info btn-addtobasket pull-right span7" type="submit">Add to basket</button>
            </div>
        }
        
        @RenderZone("Below Add to cart")
    </div>
</div>

<hr class="small-margin " />

<div class="row-fluid" id="product-description-container">
    <div class="@(hasSpecifications ? "span8" : "span12")">
        <h4>Description</h4>
        @Editable(Model, product => product.BodyContent)
    </div>
    @if (hasSpecifications)
    {
        Html.RenderPartial("ProductSpecifications", Model);
    }
</div>


@{ Html.IncludeScript("~/Apps/Ecommerce/Content/Scripts/custom/product.js"); }
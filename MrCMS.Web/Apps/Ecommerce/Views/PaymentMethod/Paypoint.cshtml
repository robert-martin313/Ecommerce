@using MrCMS.Web.Apps.Ecommerce.Models
@model MrCMS.Web.Apps.Ecommerce.Models.PaypointPaymentDetailsModel  
@{
    var startMonths = ViewData["start-months"] as IEnumerable<SelectListItem>;
    var startYears = ViewData["start-years"] as IEnumerable<SelectListItem>;
    var expiryMonths = ViewData["expiry-months"] as IEnumerable<SelectListItem>;
    var expiryYears = ViewData["expiry-years"] as IEnumerable<SelectListItem>;
    var cardTypes = ViewData["card-types"] as IEnumerable<SelectListItem>;
    var failureDetails = TempData["error-details"] as FailureDetails;
}
@using (Html.BeginForm("Paypoint", "PaymentMethod", FormMethod.Post, new { @class = "form-horizontal" }))
{
    <div class="border-grey margin-bottom-20" id="select-method">
        <div class="sub-header grey-background">
            Card Details
        </div>
        <div class="padding-20">

            <div class="control-group">
                <label class="control-label" for="CardType">Card Type*</label>
                <div class="controls">
                    @Html.DropDownListFor(model => model.CardType, cardTypes)
                    @Html.ValidationMessageFor(model => model.CardType)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="CardNumber">Card Number*</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.CardNumber, new { @class = "input-xlarge" })
                    @Html.ValidationMessageFor(model => model.CardNumber)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="NameOnCard">Name On Card*</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.NameOnCard, new { @class = "input-xlarge" })
                    @Html.ValidationMessageFor(model => model.NameOnCard)
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="CardVerificationCode">Card Verification (CV2)*</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.CardVerificationCode, new { @class = "input-small" })
                    @Html.ValidationMessageFor(model => model.CardVerificationCode)
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">Valid From</div>
                <div class="controls">
                    <div class="pull-left">
                        @Html.DropDownListFor(model => model.StartMonth, startMonths)
                    </div>
                    <div class="pull-left">
                        @Html.DropDownListFor(model => model.StartYear, startYears)
                    </div>
                </div>
            </div>
            <div class="control-group">
                <div class="control-label">Expires On*</div>
                <div class="controls">
                    <div class="pull-left">
                        @Html.DropDownListFor(model => model.EndMonth, expiryMonths)
                        @Html.ValidationMessageFor(model => model.EndMonth)
                    </div>
                    <div class="pull-left">
                        @Html.DropDownListFor(model => model.EndYear, expiryYears)
                        @Html.ValidationMessageFor(model => model.EndYear)
                    </div>
                </div>
            </div>
            <div class="control-group">
                <label class="control-label" for="NameOnCard">Issue Number (Maestro/Solo only)</label>
                <div class="controls">
                    @Html.TextBoxFor(model => model.CardIssueNumber, new { @class = "input-medium" })
                </div>
            </div>
            <div class="control-group">
                <div class="controls">
                    <label>
                    </label>
                    <button class="btn btn-info"  id="continue" name="continue">Place order</button>
                </div>
            </div>
        </div>
    </div>
}
@if (failureDetails != null)
{
    <ul>
        @foreach (var error in failureDetails.Details)
        {
            <li>
                @error
            </li>
        }
    </ul>
}
<style>
    .input-validation-error { border: 1px solid red!important;}
    .field-validation-error span { color: red;}
</style>
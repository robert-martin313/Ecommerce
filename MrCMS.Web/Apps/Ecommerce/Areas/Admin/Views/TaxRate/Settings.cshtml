@using MrCMS.Helpers
@using MrCMS.Web.Apps.Ecommerce.Settings
@{
    var pricingMethodOptions = EnumHelper<PriceLoadingMethod>.GetOptions();
    var taxCalculationMethodOptions = EnumHelper<TaxCalculationMethod>.GetOptions();
    var applyCustomerTaxOptions = EnumHelper<ApplyCustomerTax>.GetOptions();
    var discountOnPricesOptions = EnumHelper<DiscountOnPrices>.GetOptions();
}
@model MrCMS.Web.Apps.Ecommerce.Settings.TaxSettings
<div class="form-group">
    @Html.LabelFor(settings => settings.PriceLoadingMethod)
    @Html.DropDownListFor(settings => settings.PriceLoadingMethod, pricingMethodOptions, new { @class = "form-control" })
</div>

<div class="form-group">
    @Html.LabelFor(settings => settings.TaxCalculationMethod)
    @Html.DropDownListFor(settings => settings.TaxCalculationMethod, taxCalculationMethodOptions, new { @class = "form-control" })
</div>

<div class="form-group">
    @Html.LabelFor(settings => settings.ApplyCustomerTax)
    @Html.DropDownListFor(settings => settings.ApplyCustomerTax, applyCustomerTaxOptions, new { @class = "form-control" })
</div>

<div class="form-group">
    @Html.LabelFor(settings => settings.DiscountOnPrices)
    @Html.DropDownListFor(settings => settings.DiscountOnPrices, discountOnPricesOptions, new { @class = "form-control" })
</div>

@*<div class="form-group">
        @Html.InlineCheckboxFor(settings => settings.LoadedPricesIncludeTax)
    </div>*@
<div class="form-group">
    @Html.InlineCheckboxFor(settings => settings.ShippingRateTaxesEnabled)
</div>

@if (Model.ShippingRateTaxesEnabled)
{
    <div class="form-group">
        @Html.InlineCheckboxFor(settings => settings.ShippingRateIncludesTax)
    </div>
}
<br />
<input type="submit" value="Save Settings" id="save-settings" class="btn btn-primary btn-xs" />

@using MrCMS.Helpers
@using MrCMS.Web.Apps.Ecommerce.Models
@model OrderSearchModel
@{
    ViewBag.Title = "Orders";
}

<fieldset>
    <legend>Orders
    </legend>
    @if (Model.Results != null && !Model.Results.Any())
    {
        @:No orders.
    }
    else
    {
        using (Html.BeginForm("Index", "Order", FormMethod.Get))
        {
        <div class="row-fluid">
            <div class="span4">
                @Html.LabelFor(x => x.Email)
                @Html.TextBoxFor(x => x.Email, new { @class = "input-large" })

                @Html.LabelFor(x => x.LastName)
                @Html.TextBoxFor(x => x.LastName, new { @class = "input-medium" })


                @Html.LabelFor(x => x.OrderId)
                @Html.TextBoxFor(x => x.OrderId, new { @class = "input-small" })
            </div>
            <div class="span4">
                @Html.LabelFor(x => x.DateFrom)
                @Html.TextBoxFor(x => x.DateFrom, new { @class = "input-medium date-time-picker" })

                @Html.LabelFor(x => x.DateTo)
                @Html.TextBoxFor(x => x.DateTo, new { @class = "input-medium date-time-picker" })
            </div>
            <div class="span4">
                @Html.LabelFor(x => x.PaymentStatus)
                @Html.DropDownList("PaymentStatus", ViewData["PaymentStatuses"] as IEnumerable<SelectListItem>, new { @class = "input-medium" })

                @Html.LabelFor(x => x.ShippingStatus)
                @Html.DropDownList("ShippingStatus", ViewData["ShippingStatuses"] as IEnumerable<SelectListItem>, new { @class = "input-medium" })
            </div>
        </div>


        <button type="submit" class="btn btn-primary btn-mini">Filter</button>

        }
        <hr />
        <table class="table table-condensed table-striped">
            <thead>
                <tr>
                    <th></th>
                    <th>Sales Channel
                    </th>
                    <th>Order Id
                    </th>
                    <th>Email
                    </th>
                    <th>Payment Status
                    </th>
                    <th>Shipping Status
                    </th>
                    <th>Amount
                    </th>
                    <th>Created On
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model.Results)
                {
                    var colour = "orange-row";
                    if (item.ShippingStatus.Equals(ShippingStatus.Shipped) && item.PaymentStatus.Equals(PaymentStatus.Paid))
                    {
                        colour = "green-row";
                    }
                    else if (item.IsCancelled)
                    {
                        colour = "red-row";
                    }
                    <tr>
                        <td class="order-status-indicator @colour">&nbsp;</td>
                        <td>
                            @(!String.IsNullOrWhiteSpace(item.SalesChannel) ? item.SalesChannel : "Mr CMS")
                        </td>
                        <td>
                            @item.Id
                        </td>
                        <td>
                            @item.OrderEmail
                        </td>
                        <td>
                            @if (!item.IsCancelled)
                            {
                                <div class="pull-left">
                                    @item.PaymentStatus &nbsp;
                                </div>
                                <div class="pull-left">
                                    @if (item.PaymentStatus == PaymentStatus.Pending)
                                    {
                                        @Html.ActionLink("Mark as Paid", "MarkAsPaid", "Order", new { id = item.Id, index = true }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
                                        <span></span>
                                        @Html.ActionLink("Void", "MarkAsVoided", "Order", new { id = item.Id, index = true }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
                                    }
                                </div>
                            }
                            else
                            {
                                @:Cancelled
                            }
                        </td>
                        <td>
                            @if (!item.IsCancelled)
                            {
                                <div class="pull-left">
                                    @item.ShippingStatus &nbsp;
                                </div>
                                <div class="pull-left">
                                    @if (item.ShippingStatus != ShippingStatus.Shipped)
                                    {
                                        @Html.ActionLink("Mark as Shipped", "MarkAsShipped", "Order", new { id = item.Id, index = true }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
                                    }
                                </div>
                            }
                            else
                            {
                                @:Cancelled
                            }
                        </td>
                        <td>&pound;@item.Total.ToString("#.##")
                        </td>
                        <td>
                            @item.CreatedOn
                        </td>
                        <td>
                            <div class="btn-group">
                                @Html.ActionLink("Details", "Edit", "Order", new { id = item.Id }, new { @class = "btn btn-mini" })
                            </div>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        @Html.Pager(Model.Results, "Index", i => new { page = i })
    }

</fieldset>
@{ Html.IncludeCss("~/Apps/Ecommerce/Areas/Admin/Content/Styles/ecommerce-admin.css"); }
@using MrCMS.Helpers
@using MrCMS.Web.Apps.Ecommerce.Models
@model OrderSearchModel
@{
    ViewBag.Title = "Orders";
}

    <fieldset>
        <legend>Orders
            <span class="btn-group  display-inline  pull-right">
                <button type="submit" class="btn btn-primary">Filter</button>
            </span>
        </legend>
        @if (Model.Results!=null && !Model.Results.Any())
        {
            @:No orders.
        }
        else
        {
            <h4>
                Filter orders
            </h4>
             using (Html.BeginForm("Index", "Order", FormMethod.Get))
             {
                 <table class="table table-noborders">
                     <tr>
                         <td class="span2">
                             Email:
                         </td>
                         <td class="span2">
                             @Html.TextBoxFor(x => x.Email, new {@class = "input-medium"})
                         </td>
                         <td class="span2">
                             Last Name:
                         </td>
                         <td class="span6">
                             @Html.TextBoxFor(x => x.LastName, new {@class = "input-medium"})
                         </td>
                     </tr>
                     <tr>
                         <td class="span2">
                             Order Id:
                         </td>
                         <td class="span2">
                             @Html.TextBoxFor(x => x.OrderId, new {@class = "input-medium"})
                         </td>
                         <td class="span2">
                            
                         </td>
                         <td class="span6">
                        
                         </td>
                     </tr>
                     <tr>
                         <td class="span2">
                             Date From:
                         </td>
                         <td class="span2">
                             @Html.TextBoxFor(x => x.DateFrom, new {@class = "input-medium date-time-picker"})
                         </td>
                         <td class="span2">
                             Date To:
                         </td>
                         <td class="span6">
                             @Html.TextBoxFor(x => x.DateTo, new {@class = "input-medium date-time-picker"})
                         </td>
                     </tr>
                     <tr>
                         <td class="span2">
                             Payment Status:
                         </td>
                         <td class="span2">
                             @Html.DropDownList("PaymentStatus", ViewData["PaymentStatuses"] as IEnumerable<SelectListItem>, new {@class = "input-medium"})
                         </td>
                         <td class="span2">
                             Shipping Status:
                         </td>
                         <td class="span6">
                             @Html.DropDownList("ShippingStatus", ViewData["ShippingStatuses"] as IEnumerable<SelectListItem>, new {@class = "input-medium"})
                         </td>
                     </tr>
                 </table>
             }
            <hr/>
            <table class="table table-condensed table-striped">
                <thead>
                    <tr>
                        <th>Order Id
                        </th>
                        <th>Email
                        </th>
                        <th>Payment Status
                        </th>
                        <th>Shipping Status
                        </th>
                        <th>Amount
                        </th>
                        <th>Created On
                        </th>
                        <th>
                        </th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model.Results)
                    {
                        <tr>
                            <td>
                                @item.Id
                            </td>
                            <td>
                                @item.OrderEmail
                            </td>
                            <td>
                                <div class="pull-left">
                                    @item.PaymentStatus &nbsp;
                                    </div>
                                    <div class="pull-left">
                                    @if (item.PaymentStatus == PaymentStatus.Pending)
                                    {
                                         @Html.ActionLink("Mark as Paid", "MarkAsPaid", "Order", new { id = item.Id, index=true }, new { @class = "btn btn-mini",data_toggle = "fb-modal" })
                                        <span></span>
                                         @Html.ActionLink("Void", "MarkAsVoided", "Order", new { id = item.Id, index=true }, new { @class = "btn btn-mini",data_toggle = "fb-modal" })
                                    }
                                    @if (item.PaymentStatus == PaymentStatus.Paid)
                                    {
                                         <a href="@Url.Action("Add","OrderRefund",new { orderID = item.Id, index=true })" class="btn btn-mini" data-toggle="fb-modal">Add Order Refund</a>
                                    }
                                    </div>
                            </td>
                            <td>
                                    <div class="pull-left">
                                    @item.ShippingStatus &nbsp;
                                    </div>
                                    <div class="pull-left">
                                    @if (item.ShippingStatus != ShippingStatus.Shipped)
                                    {
                                         @Html.ActionLink("Mark as Shipped", "MarkAsShipped", "Order", new { id = item.Id, index=true }, new { @class = "btn btn-mini",data_toggle = "fb-modal" })
                                    }
                                    </div>
                            </td>
                            <td>
                                &pound;@item.Total.ToString("#.##")
                            </td>
                            <td>
                                @item.CreatedOn
                            </td>
                            <td>
                                <div class="btn-group">
                                    @Html.ActionLink("Details", "Edit", "Order", new { id = item.Id }, new { @class = "btn btn-mini"})
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
            @Html.Pager(Model.Results, "Index", i => new {page = i})
        }
        
    </fieldset>
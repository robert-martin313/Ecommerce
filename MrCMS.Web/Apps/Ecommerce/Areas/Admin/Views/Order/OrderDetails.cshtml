@using MrCMS.Web.Apps.Ecommerce
@using MrCMS.Web.Apps.Ecommerce.Helpers
@using MrCMS.Web.Apps.Ecommerce.Models
@model MrCMS.Web.Apps.Ecommerce.Entities.Orders.Order
@{
    var orderShipping = Model.ShippingTotal.GetValueOrDefault() - Model.ShippingTax.GetValueOrDefault();
    var nonSystemSalesChannel = Model.SalesChannel != EcommerceApp.DefaultSalesChannel;
}
<div class="row-fluid">
    <div class="@(nonSystemSalesChannel ? "span6" : "span12")">
        <table class="table table-condensed table-striped">
            <tr>
                <td>Sales Channel</td>
                <td>@Model.SalesChannel</td>
            </tr>
            <tr>
                <td>Customer</td>
                <td>
                    @Html.Raw((Model.User != null ? string.Format("<a href='/Admin/User/Edit/{0}'>", @Model.User.Id) : ""))
                    @Model.OrderEmail
                    @Html.Raw((Model.User != null ? "</a>" : ""))
                </td>
            </tr>
            <tr>
                <td>Order GUID</td>
                <td>@Model.Guid</td>
            </tr>
            <tr>
                <td>Created On</td>
                <td>@Model.CreatedOn</td>
            </tr>
            <tr>
                <td>Order Subtotal (ex Tax)</td>
                <td>@Model.Subtotal.ToCurrencyFormat()</td>
            </tr>
            <tr>
                <td>Order Shipping (ex Tax)</td>
                <td>@orderShipping.ToCurrencyFormat()</td>
            </tr>
            <tr>
                <td>Order Shipping Total</td>
                <td>@Model.ShippingTotal.ToCurrencyFormat()</td>
            </tr>
            <tr>
                <td>Order Tax</td>
                <td>@Model.Tax.ToCurrencyFormat()</td>
            </tr>
            <tr>
                <td>Order Total</td>
                <td>@Model.Total.ToCurrencyFormat()</td>
            </tr>
            @if (Model.TotalRefunds > 0)
            {
                <tr>
                    <td>Order Refunds</td>
                    <td>@Model.TotalRefunds.ToCurrencyFormat()</td>
                </tr>
                <tr>
                    <td>Order Total After refunds</td>
                    <td>@Model.TotalAfterRefunds.ToCurrencyFormat()</td>
                </tr>
            }
        </table>
    </div>
    @if (nonSystemSalesChannel)
    {
        <div class="span6">
            @Html.GetSalesChannelInfo()
        </div>
    }
</div>
@{
    if (Model.OrderRefunds.Count > 0)
    {
    <div class="row-fluid">
        <div class="span12">
            @if (Model.OrderRefunds.Count > 0)
            {
                <h4>Refunds</h4>
                <table class="table table-condensed table-striped">
                    <thead>
                        <tr>
                            <th>Amount
                            </th>
                            <th>Note
                            </th>
                            <th>Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderRefunds)
                        {
                            <tr>
                                <td>
                                    @item.Amount.ToCurrencyFormat()
                                </td>
                                <td>
                                    @item.Note
                                </td>
                                <td>
                                    <div class="btn-group">
                                        @Html.ActionLink("Delete", "Delete", "OrderRefund", new { id = item.Id }, new { @class = "btn btn-danger btn-mini", data_toggle = "fb-modal" })
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>
    }
}
<hr class="small-margin" />
<div class="row-fluid">
    <div class="span6">
        <h4>Payment</h4>

        <table class="table table-condensed table-striped">
            <tr>
                <td>Method</td>
                <td>@Html.DisplayFor(x => x.PaymentMethod)</td>
            </tr>
            <tr>
                <td>Status</td>
                <td>@Html.DisplayFor(x => x.PaymentStatus)</td>
            </tr>
        </table>
        @if (Model.PaymentStatus == PaymentStatus.Pending)
        {
            @Html.ActionLink("Mark as Paid", "MarkAsPaid", "Order", new { id = Model.Id, index = false }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
            <span></span>
            @Html.ActionLink("Void", "MarkAsVoided", "Order", new { id = Model.Id, index = false }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
        }
        @if (Model.PaymentStatus == PaymentStatus.Paid)
        {
            <a href="@Url.Action("Add", "OrderRefund", new { orderID = Model.Id, index = false })" class="btn btn-mini" data-toggle="fb-modal">Add Refund</a>
        }

    </div>
    <div class="span6">
        <h4>Shipping</h4>

        <table class="table table-condensed">
            <tr>
                <td>Method</td>
                <td>@Html.DisplayFor(x => x.ShippingMethod.Name)</td>
            </tr>
            <tr>
                <td>Status</td>
                <td>@Html.DisplayFor(x => x.ShippingStatus)</td>
            </tr>
            @if (Model.ShippingDate.HasValue)
            {
                <tr>
                    <td>Shipped On</td>
                    <td>@Html.DisplayFor(x => x.ShippingDate)</td>
                </tr>
            }
            @{
                if (!string.IsNullOrEmpty(Model.TrackingNumber))
                {
                <tr>
                    <td>Tracking Number</td>
                    <td>@Html.DisplayFor(x => x.TrackingNumber)</td>
                </tr>
                }
            }
        </table>
        @if (Model.ShippingStatus != ShippingStatus.Shipped)
        {
            @Html.ActionLink("Mark as Shipped", "MarkAsShipped", "Order", new { id = Model.Id, index = false }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
        }
        @Html.ActionLink("Set tracking number", "SetTrackingNumber", "Order", new { id = Model.Id }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
    </div>
</div>
<hr />
<div class="row-fluid">
    <div class="span6">
        <h4>Shipping Address
                @Html.ActionLink("Edit", "Edit", "Address", new { Id = Model.Id }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
        </h4>
        <div class="pull-left">
            @if (Model.ShippingAddress != null)
            {
                @Html.Raw(Model.BillingAddress.GetDescriptionHtml())
                
                <p>@Model.ShippingAddress.PhoneNumber</p>
            }
        </div>
    </div>
    <div class="span6">
        <h4>Billing Address
                @Html.ActionLink("Edit", "Edit", "Address", new { Id = Model.Id }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
        </h4>
        <div class="pull-left">
            @if (Model.BillingAddress != null)
            {
                @Html.Raw(Model.BillingAddress.GetDescriptionHtml())

                <p>@Model.BillingAddress.PhoneNumber</p>
            }
        </div>
    </div>
</div>

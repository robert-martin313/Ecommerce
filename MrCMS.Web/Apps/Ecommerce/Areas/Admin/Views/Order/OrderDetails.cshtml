@using MrCMS.Web.Apps.Ecommerce.Helpers
@using MrCMS.Web.Apps.Ecommerce.Models
@model MrCMS.Web.Apps.Ecommerce.Entities.Orders.Order
<div class="tab-pane active" id="order-details">
    <div class="row-fluid">
        <div class="span6">
            <p>
                Customer: @Model.OrderEmail
            </p>
            <p>
                Order GUID: @Model.Guid
            </p>
            <p>
                Order Subtotal (ex TAX): @Model.Subtotal.ToCurrencyFormat()
            </p>
            <p>
                Order Shipping (ex TAX): @(Model.ShippingTotal.GetValueOrDefault() - Model.ShippingTax.GetValueOrDefault()).ToCurrencyFormat()
            </p>
            <p>
                Order Tax: &pound;@Model.Tax.ToCurrencyFormat()
            </p>
            <p>
                Order Total: &pound;@Model.Total.ToCurrencyFormat()
            </p>
        </div>
        <div class="span6">
            @if (Model.OrderRefunds.Count > 0)
            {
                <p>Refunds:</p>
                <table class="table table-bordered table-striped">
                    <thead>
                        <tr>
                            <th>Amount
                            </th>
                            <th>Note
                            </th>
                            <th>Actions
                            </th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var item in Model.OrderRefunds)
                        {
                            <tr>
                                <td>
                                    @item.Amount.ToCurrencyFormat()
                                </td>
                                <td>
                                    @item.Note
                                </td>
                                <td>
                                    <div class="btn-group">
                                        @Html.ActionLink("Delete", "Delete", "OrderRefund", new { id = item.Id }, new { @class = "btn btn-danger btn-mini", data_toggle = "fb-modal" })
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>

    <br />
    @Html.LabelFor(x => x.PaymentMethod, new { @class = "pull-left" }): &nbsp;
    @Html.DisplayFor(x => x.PaymentMethod)
    <div class="clearfix"></div>
    @Html.LabelFor(x => x.PaymentStatus, new { @class = "pull-left" }): &nbsp;
    @Html.DisplayFor(x => x.PaymentStatus)
    @if (Model.PaymentStatus == PaymentStatus.Pending)
    {
        @Html.ActionLink("Mark as Paid", "MarkAsPaid", "Order", new { id = Model.Id, index = false }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
        <span></span>
        @Html.ActionLink("Void", "MarkAsVoided", "Order", new { id = Model.Id, index = false }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
    }
    @if (Model.PaymentStatus == PaymentStatus.Paid)
    {
        <a href="@Url.Action("Add", "OrderRefund", new { orderID = Model.Id, index = false })" class="btn btn-mini" data-toggle="fb-modal">Add Order Refund</a>
    }
    <div class="clearfix"></div>
    <br />
    @Html.LabelFor(x => x.ShippingMethod, new { @class = "pull-left" }): &nbsp;
    @Html.DisplayFor(x => x.ShippingMethod.Name)
    <div class="clearfix"></div>
    @Html.LabelFor(x => x.ShippingStatus, new { @class = "pull-left" }): &nbsp;
    @Html.DisplayFor(x => x.ShippingStatus)
    @if (Model.ShippingStatus != ShippingStatus.Shipped)
    {
        @Html.ActionLink("Mark as Shipped", "MarkAsShipped", "Order", new { id = Model.Id, index = false }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
    }
    <div class="clearfix"></div>
    <br />
    <div class="row-fluid">
        <div class="span6">
            <h4>Shipping Address
                @Html.ActionLink("Edit", "Edit", "Address", new { addressType = 1, orderID = Model.Id, addressID = Model.ShippingAddress != null ? Model.ShippingAddress.Id : 0 }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
            </h4>
            <div class="pull-left">
                @if (Model.ShippingAddress != null)
                {
                    @Model.ShippingAddress.Address1<div class="clearfix"></div>
                    @Model.ShippingAddress.Address2<div class="clearfix"></div>
                    @Model.ShippingAddress.City<div class="clearfix"></div>
                    @Model.ShippingAddress.PostalCode
                }
            </div>
        </div>
        <div class="span6">
            <h4>Billing Address
                @Html.ActionLink("Edit", "Edit", "Address", new { addressType = 2, orderID = Model.Id, addressID = Model.BillingAddress != null ? Model.BillingAddress.Id : 0 }, new { @class = "btn btn-mini", data_toggle = "fb-modal" })
            </h4>
            <div class="pull-left">
                @if (Model.BillingAddress != null)
                {
                    @Model.BillingAddress.Address1<div class="clearfix"></div>
                    @Model.BillingAddress.Address2<div class="clearfix"></div>
                    @Model.BillingAddress.City<div class="clearfix"></div>
                    @Model.BillingAddress.PostalCode
                }
            </div>
        </div>
    </div>

</div>

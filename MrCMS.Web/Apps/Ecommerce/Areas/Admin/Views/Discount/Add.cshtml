@using MrCMS.Helpers
@model MrCMS.Web.Apps.Ecommerce.Entities.Discounts.Discount

@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPopup.cshtml";
    var discountTypeOptions = ViewData["discount-type-options"] as List<SelectListItem>;
    Html.IncludeScript("~/Apps/Ecommerce/Areas/Admin/Content/Scripts/custom/discount.js");
    var url = HttpContext.Current.Request.Url.AbsoluteUri.Replace(HttpContext.Current.Request.Url.PathAndQuery, string.Empty);
}
@using (Html.BeginForm("Add", "Discount", FormMethod.Post))
{
    <fieldset>
        <legend>
            Add Discount
            <span class="btn-group  display-inline  pull-right">
                <input type="submit" class="btn-primary btn" value="Add Discount" />
            </span>
        </legend>
        <div class="form-group">
            @Html.LabelFor(x => x.Name)
            @Html.TextBoxFor(x => x.Name, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.Name)
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.ValidFrom)
            @Html.TextBoxFor(x => x.ValidFrom, new { @class = "form-control date-time-picker" })
            @Html.ValidationMessageFor(x => x.ValidFrom)
        </div>
        <div class="form-group">
            @Html.LabelFor(x => x.ValidUntil)
            @Html.TextBoxFor(x => x.ValidUntil, new { @class = "form-control date-time-picker" })
            @Html.ValidationMessageFor(x => x.ValidUntil)
        </div>
        <div class="form-group">
            @Html.InlineCheckboxFor(discount => discount.RequiresCode, checkboxAttributes: new { @checked = "checked" })
        </div>
        <div class="form-group">
            @Html.InlineCheckboxFor(x => x.CanBeAppliedFromUrl, checkboxAttributes: new {@checked = "checked"})
        </div>
        <div class="form-group from-url-group" data-code-field>
            @Html.Label(string.Format("This discount can be applied by navigating to {0}/Discount/{{Code}}", url))
        </div>
        <div class="form-group" data-code-field>
            @Html.LabelFor(x => x.Code)
            @Html.TextBoxFor(x => x.Code, new {@class = "form-control"})
            @Html.ValidationMessageFor(x => x.Code)
        </div>
        <div class="form-group from-url-group" data-code-field>
            @Html.LabelFor(x => x.Message)
            @Html.TextBoxFor(x => x.Message, new {@class = "form-control"})
            @Html.ValidationMessageFor(x => x.Message)
        </div>
        <div class="form-group from-url-group" data-code-field>
            @Html.LabelFor(x => x.RedirectUrl)
            @Html.TextBoxFor(x => x.RedirectUrl, new { @class = "form-control" })
            @Html.ValidationMessageFor(x => x.RedirectUrl)
        </div>
</fieldset>
}
@using MrCMS.Helpers
@using MrCMS.Web.Apps.Ecommerce.Pages
@model MrCMS.Web.Apps.Ecommerce.Entities.Products.ProductSpecificationValue
@{ 
    Layout = "~/Areas/Admin/Views/Shared/_LayoutPopup.cshtml";
    var product = ViewData["product"] as Product;
}
<div class="modal-header">
    <h3>Add Specifications to Product</h3>
</div>
<div class="modal-body">
    <div id="categories">
        @Html.Hidden("ProductId",Model.Product.Id)
        @if((ViewData["specification-attributes"] as IEnumerable<SelectListItem>).Any())
        {
            @Html.DropDownList("Option", ViewData["specification-attributes"] as IEnumerable<SelectListItem>)
             <br />
             @Html.DropDownListFor(x=>x.Value, ViewData["specification-attributes-options"] as IEnumerable<SelectListItem>,new {@class="pull-left"})
            var dc = "none";
            if((ViewData["specification-attributes-options"] as IEnumerable<SelectListItem>).Count()==1)
            {
                dc = "block";
            }
            <div id="other" class="pull-right" style="display:@dc">
                New option value: <input type="text" class="input-medium" id="new-option-value"/>
            </div>
        }
        else
        {
            <span>There are no specification attributes for adding. </span>
        }
    </div>
</div>
<div class="modal-footer">
    <button id="close" class="btn-primary btn">Save & Close</button>
</div>
@{ Html.IncludeScript("~/Apps/Ecommerce/Areas/Admin/Content/Scripts/custom/specification-attributes.js"); }

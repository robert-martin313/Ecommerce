@using MrCMS.DbConfiguration.Configuration
@using MrCMS.Installation
@model MrCMS.Installation.InstallModel
@{
    ViewBag.Title = "Install MrCMS";
    Layout = "~/Views/Shared/_Installation.cshtml";
    var installationResult = ViewData["installationResult"] as InstallationResult; 
}

@using (Html.BeginForm("Setup", "Install", FormMethod.Post, new { id = "installationform", @class = "form-horizontal" }))
{
    if (installationResult != null)
    {
        if (installationResult.Errors.Any())
        {
    <div class="alert alert-error">
        <strong>Sorry there was a problem installing - please see errors below</strong>
        <ul>
            @{
            foreach (var error in installationResult.Errors)
            {
                <li>@error</li>
            }
            }
        </ul>
    </div>
        }
    }
    <div class="row-fluid">
        <div class="span6">
            <fieldset>
                <h4>Site Information</h4>
                <hr class="small-margin" />

                <div class="control-group">
                    <label class="control-label" for="SiteName">Site Name</label>
                    <div class="controls">
                        @Html.TextBoxFor(x => x.SiteName)
                        @Html.ValidationMessageFor(x => x.SiteName)
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label" for="SiteUrl">Site Url</label>
                    <div class="controls">
                        @Html.TextBoxFor(x => x.SiteUrl)
                        @Html.ValidationMessageFor(x => x.SiteUrl)
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label" for="AdminEmail">Admin Email</label>
                    <div class="controls">
                        @Html.TextBoxFor(x => x.AdminEmail)
                        @Html.ValidationMessageFor(x => x.AdminEmail)
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label" for="AdminPassword">Admin Password</label>
                    <div class="controls">
                        @Html.PasswordFor(x => x.AdminPassword)
                        @Html.ValidationMessageFor(x => x.AdminPassword)
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label" for="ConfirmPassword">Confirm Password</label>
                    <div class="controls">
                        @Html.PasswordFor(x => x.ConfirmPassword)
                        @Html.ValidationMessageFor(x => x.ConfirmPassword)
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label" for="UiCulture">Ui Culture</label>
                    <div class="controls">
                        @Html.DropDownListFor(x => x.UiCulture, Model.CultureOptions)
                    </div>
                </div>

                <div class="control-group">
                    <label class="control-label" for="TimeZone">Time Zone</label>
                    <div class="controls">
                        @Html.DropDownListFor(x => x.TimeZone, Model.TimeZoneOptions)
                    </div>
                </div>
            </fieldset>
        </div>
        <div class="span6">
            <fieldset>
                <h4>Database information</h4>
                <hr class="small-margin" />


                <div class="control-group">
                    <div class="">
                        <label class="checkbox" for="provider_sqlite">
                            @Html.RadioButton("DatabaseType", DatabaseType.Sqlite, (Model.DatabaseType == DatabaseType.Sqlite), new { id = "provider_sqlite" })
                            Use built-in data storage (Sqlite) (limited compatibility).
                        </label>
                    </div>
                </div>

                <div class="control-group">
                    <div class="">
                        <label class="checkbox" for="provider_mysql">
                            @Html.RadioButton("DatabaseType", DatabaseType.MySQL, (Model.DatabaseType == DatabaseType.MySQL), new { id = "provider_mysql" })
                            Use MySQL
                        </label>
                    </div>
                </div>

                <div class="control-group">
                    <div class="">
                        <label class="checkbox" for="provider_sqlserver">
                            @Html.RadioButton("DatabaseType", DatabaseType.MsSql, (Model.DatabaseType == DatabaseType.MsSql), new { id = "provider_sqlserver" })
                            Use SQL Server (or SQL Express) database. <b>[Recommended]</b>
                        </label>
                    </div>
                </div>

                <hr />

                <div id="sqlConnectionInfo">

                    <div class="control-group">
                        <div class="" style="margin-left: 20px;">
                            <label class="checkbox" for="SqlServerCreateDatabase">
                                @Html.CheckBoxFor(x => x.SqlServerCreateDatabase)
                                Create database if it doesn't exist
                            </label>
                        </div>
                    </div>

                    <div class="control-group">
                        <div class="">
                            <label class="checkbox" for="sqlconnectioninfo_values">
                                @Html.RadioButton("SqlConnectionInfo", "sqlconnectioninfo_values", (Model.SqlConnectionInfo == "sqlconnectioninfo_values"), new { id = "sqlconnectioninfo_values" })
                                Enter SQL connection values
                            </label>
                            <label class="checkbox" for="sqlconnectioninfo_raw">
                                @Html.RadioButton("SqlConnectionInfo", "sqlconnectioninfo_raw", (Model.SqlConnectionInfo == "sqlconnectioninfo_raw"), new { id = "sqlconnectioninfo_raw" })
                                Enter raw connection string (advanced)
                            </label>
                        </div>
                    </div>


                    <div id="sqlDatabaseInfo">
                        <div class="control-group">
                            <label class="control-label" for="SqlServerName">SQL Server Name </label>
                            <div class="controls">
                                @Html.TextBoxFor(x => x.SqlServerName)
                                @Html.ValidationMessageFor(x => x.SqlServerName)
                            </div>
                        </div>

                        <div class="control-group">
                            <label class="control-label" for="SqlDatabaseName">SQL Database Name</label>
                            <div class="controls">
                                @Html.TextBoxFor(x => x.SqlDatabaseName)
                                @Html.ValidationMessageFor(x => x.SqlDatabaseName)
                            </div>
                        </div>

                        <div class="control-group">
                            <div class="">
                                <label class="checkbox" for="sqlauthenticationtype_sql">
                                    @Html.RadioButton("SqlAuthenticationType", "sqlauthentication", (Model.SqlAuthenticationType == "sqlauthentication"), new { id = "sqlauthenticationtype_sql" })
                                    Use SQL Server account
                                </label>
                                <label class="checkbox" for="sqlauthenticationtype_windows">
                                    @Html.RadioButton("SqlAuthenticationType", "windowsauthentication", (Model.SqlAuthenticationType == "windowsauthentication"), new { id = "sqlauthenticationtype_windows" })
                                    Use integrated Windows authentication
                                </label>
                            </div>
                        </div>

                        <div class="control-group" id="pnlSqlServerUsername">
                            <label class="control-label" for="SqlDatabaseName">SQL Server Username</label>
                            <div class="controls">
                                @Html.TextBoxFor(x => x.SqlServerUsername)
                                @Html.ValidationMessageFor(x => x.SqlServerUsername)
                            </div>
                        </div>

                        <div class="control-group" id="pnlSqlServerPassword">
                            <label class="control-label" for="SqlServerPassword">SQL Server Password</label>
                            <div class="controls">
                                @Html.PasswordFor(x => x.SqlServerPassword, new { @class = "textbox" })
                                @Html.ValidationMessageFor(x => x.SqlServerPassword)
                            </div>
                        </div>

                    </div>
                    <div id="sqlDatabaseConnectionString">
                        <span style="white-space: nowrap;">
                            <label for="DatabaseConnectionString">
                                Connection string:</label>
                            @Html.TextBoxFor(x => x.DatabaseConnectionString, new { @class = "textbox", style = "width:90%;" })
                        </span>
                        <br />
                        <span class="hint">Example:<br />
                            Data Source=sqlServerName;Initial Catalog=dbName;Persist Security Info=True;User
                            ID=userName;Password=password
                            <br />
                            Find more info <a href="http://www.connectionstrings.com/" target="_blank">here</a>
                        </span>
                    </div>
                </div>


            </fieldset>
        </div>
    </div>
    <hr />
    
    <div class="text-center">
        <input type="submit" value="Install" class="btn btn-primary btn-large" />
    </div>
       
}
@using MrCMS.Entities.People
@using MrCMS.Helpers
@using MrCMS.Models
@using MrCMS.Paging
@model UserSearchQuery
@{
    ViewBag.Title = "Users";
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var users = ViewData["users"] as IPagedList<User> ?? PagedList<User>.Empty;
    var roleOptions = ViewData["roles"] as List<SelectListItem> ?? new List<SelectListItem>();
}
@using (Html.BeginForm("Index", "User", FormMethod.Get))
{
    <fieldset>
        <legend>Users
            <span class="btn-group  display-inline  pull-right">
                @Html.ActionLink("Add", "Add", null, new { @class = "btn btn-success", data_toggle = "fb-modal" })
                <input type="submit" class="btn btn-primary" value="Search" />
            </span>
        </legend>

        <div class="row-fluid">
            <div class="span6">
                @Html.LabelFor(query => query.Query)
                @Html.TextBoxFor(query => query.Query, new { @class = "span12", placeholder = "Search" })
                @Html.ValidationMessageFor(query => query.Query)
            </div>
            <div class="span6">
                @Html.LabelFor(query => query.UserRoleId, "Role")
                @Html.DropDownListFor(query => query.UserRoleId, roleOptions, new{@class="span12"})
            </div>
        </div>
    </fieldset>
}
@if (users.Any())
{
    <table class="table table-condensed table-striped">
        <tr>
            <th>Email
            </th>
            <th>Name
            </th>
            <th>Roles
            </th>
            <th>Created On
            </th>
        </tr>
        @foreach (User user in users)
        {
            <tr>
                <td>
                    @Html.ActionLink(user.Email, "Edit", new { id = user.Id })
                </td>
                <td>
                    @user.Name
                </td>
                <td>
                    @(user.Roles.Any() ? string.Join(", ", user.Roles.Select(role => role.Name)) : "-")
                </td>
                <td>
                    @user.CreatedOn
                </td>
            </tr>
        }
    </table>
}
else
{
    <p>No users matched your criteria.</p>
}
@Html.Pager(users, "Index", page => new { page })


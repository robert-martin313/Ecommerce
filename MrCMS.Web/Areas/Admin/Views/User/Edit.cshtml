@using MrCMS.Entities.Multisite
@using MrCMS.Entities.People
@model User
@{
    ViewBag.Title = "Edit | " + Model.Name;
    Layout = "~/Areas/Admin/Views/Shared/_Layout.cshtml";
    var onlyAdmin = Convert.ToBoolean(ViewData["OnlyAdmin"]);
    var userRoles = ViewData["AvailableRoles"] as IEnumerable<UserRole>;
}
<div class="row-fluid">
    <div class="span4">
        <h4>Edit - @Model.Name</h4>
    </div>
    <div class="span8">
        <div class="btn-group  display-inline  pull-right">
            @Html.ActionLink("Back to list", "Index", "User", null, new { @class = "btn" })
            <a href="@Url.Action("SetPassword", "User", new { id = Model.Id })" type="button" class="btn" data-toggle="fb-modal">Reset Password</a>

            @if (onlyAdmin)
            {
                <a href="@Url.Action("Delete", "User", new { id = Model.Id })" class="btn btn-danger" data-toggle="fb-modal">Delete</a>
            }
            <button class="btn btn-primary" id="save-edit" data-action="save" data-form-id="edit-user">
                Save</button>
        </div>
    </div>
</div>
@using (Html.BeginForm("Edit", "User", FormMethod.Post, new { id = "edit-user" }))
{
    @Html.HiddenFor(x => x.Id)
    <div id="tabs">
        <ul class="nav nav-tabs">
            <li class="active"><a href="#properties" data-toggle="tab">Properties</a></li>
            <li><a href="#roles" data-toggle="tab">Roles</a></li>
        </ul>
        <div class="tab-content">
            <div id="properties" class="tab-pane active">
                @Html.LabelFor(x => x.FirstName)
                @Html.TextBoxFor(x => x.FirstName, new { @class = "span12" })
                @Html.LabelFor(x => x.LastName)
                @Html.TextBoxFor(x => x.LastName, new { @class = "span12" })
                <div class="form-inline">
                    <label>
                        @Html.CheckBoxFor(x => x.IsActive, onlyAdmin ? null : new { disabled = "disabled" }) Is Active
                    </label>
                </div>
                <hr />
                <p>
                    Created on: @Model.CreatedOn.ToShortDateString()
                    <br />
                    Last Updated on: @Model.UpdatedOn.ToShortDateString()
                </p>
            </div>
            <div id="roles" class="tab-pane">
                <div class="form-inline">
                    @if (userRoles != null)
                    {
                        foreach (var role in userRoles)
                        {
                            bool isChecked = Model.Roles.Any(x => x.Id == role.Id);
                            bool isEnabled = onlyAdmin;

                        @Html.CheckBox("Role-" + role.Id, isChecked, isEnabled ? null : new { disabled = "disabled" })
                        @:&nbsp;
                        @Html.Label("Role-" + role.Id, role.Name)
                        <br />
                        }
                    }
                </div>
            </div>
        </div>
    </div>
}
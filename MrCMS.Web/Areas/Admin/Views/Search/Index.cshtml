@using MrCMS.Helpers
@model MrCMS.Paging.IPagedList<MrCMS.Models.DetailedSearchResultModel>
<div class="row-fluid">
    @using (Html.BeginForm())
    {
        <div class="form-search">
            @Html.Label("term", "Search")
            @Html.TextBox("term", ViewData["term"])
            @Html.DropDownList("type", ViewData["doc-types"] as IEnumerable<SelectListItem>)
            @Html.Label("parent", "Select Parent:")
            @Html.DropDownList("parent", ViewData["parents"] as IEnumerable<SelectListItem>)
            <input type="submit" class="btn" />
        </div>
    }
</div>
@if (ViewData["parent-val"] != null)
{
    Html.RenderAction("GetBreadCrumb", "Search", new { parentId = Convert.ToInt32(ViewData["parent-val"]) });
}


<div id="search-results">
    @if (!Model.Any())
    {
        <p>No documents could be found matching your search term</p>
    }
    else
    {
        <div class="row-fluid">
            <div class="span6">
                <strong>Document</strong>
            </div>
            <div class="span2">
                <strong>Type</strong>
            </div>
            <div class="span4">
                <strong>Actions</strong>
            </div>
        </div>
        <hr class="small-margin" />
    }
    @foreach (var result in Model)
    {
        <div class="row-fluid">
            <div class="span6">
                <a href="@result.EditUrl" class="@(result.Webpage != null ? (!result.Webpage.Published ? "orange" : "") : "") @(result.Webpage != null ? (!result.Webpage.RevealInNavigation ? "grey" : "") : "")">
                    <strong>@result.Name</strong>
                </a>
                <br />
                @if (result.Webpage != null)
                {
                    if (result.Webpage.Parent != null)
                    {
                    @:Parent: @result.Webpage.Parent.Name
                    }
                }
                <p>Last updated on @result.LastUpdated</p>
            </div>
            <div class="span2">
                @result.DocumentType
            </div>
            <div class="span4">
                <div class="btn-group display-inline">
                    @if (!string.IsNullOrWhiteSpace(result.ViewUrl))
                    {
                        <a href="@result.ViewUrl" target="_blank" class="btn btn-mini">View</a>
                    }
                    @if (!string.IsNullOrWhiteSpace(result.AddChildUrl))
                    {
                        <a href="@result.AddChildUrl" class="btn btn-mini">Add a child page</a>
                    }
                    @if (result.HasChildren)
                    {
                        <a href="/Admin/Search?parent=@result.DocumentId&type=@Request.QueryString["type"]" class="btn btn-mini">View Children</a>
                    }
                </div>
            </div>
        </div>
    }
    @Html.Pager(Model, "Index", i => new { term = ViewData["term"], type = ViewData["type"], parent = ViewData["parent-val"], page = i })
</div>

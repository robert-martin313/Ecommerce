@using System.Drawing
@using MrCMS.Entities.Messaging
@using MrCMS.Helpers
@using MrCMS.Paging
@model MrCMS.Models.MessageQueueQuery
@{
    var queuedMessages = ViewData["data"] as IPagedList<QueuedMessage>;
}
@using (Html.BeginForm("Index", "MessageQueue", FormMethod.Get))
{
    <fieldset>
        <legend>Queued Messages
        <span class="btn-group  display-inline  pull-right">
            <input type="submit" value="Search" class="btn btn-primary" />
        </span>
        </legend>

        <div class="row-fluid">
            <div class="span8">
                @Html.LabelFor(query => query.FromQuery)
                @Html.TextBoxFor(query => query.FromQuery, new { @class = "span12" })
                
                @Html.LabelFor(query => query.ToQuery)
                @Html.TextBoxFor(query => query.ToQuery, new { @class = "span12" })
                
                @Html.LabelFor(query => query.Subject)
                @Html.TextBoxFor(query => query.Subject, new { @class = "span12" })
            </div>
            <div class="span4">
                @Html.LabelFor(query => query.From)
                @Html.EditorFor(query => query.From)
                
                @Html.LabelFor(query => query.To)
                @Html.EditorFor(query => query.To)
            </div>
        </div>
    </fieldset>
}
@if (queuedMessages.Any())
{
    <table class="table table-condensed table-striped">
        <thead>
            <tr>
                <th>From
                </th>
                <th>To
                </th>
                <th>Subject
                </th>
                <th>Created On
                </th>
                <th>Sent On?
                </th>
                <th>Actions
                </th>
            </tr>
        </thead>
        <tbody>
            @foreach (var message in queuedMessages)
            {
                <tr>
                    <td>
                        @message.FromDescription
                    </td>
                    <td>
                        @message.ToDescription
                    </td>
                    <td>
                        @message.Subject
                    </td>
                    <td>
                        @message.CreatedOn.ToString()
                    </td>
                    <td>
                        @(message.SentOnDescription)
                    </td>
                    <td>
                        <div class="btn-group">
                            @Html.ActionLink("View", "Show", "MessageQueue", new { id = message.Id }, new { @class = "btn btn-mini" })
                        </div>
                    </td>
                </tr>
            }
        </tbody>
    </table>
}
else
{
    <p>No results match your search.</p>
}
@Html.Pager(queuedMessages, "Index", page => new { page })


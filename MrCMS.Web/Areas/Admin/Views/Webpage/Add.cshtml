@using MrCMS.Entities.Documents
@using MrCMS.Helpers
@model MrCMS.Entities.Documents.Web.Webpage
@{
    ViewBag.Title = "Add Webpage";
}
@{ Html.IncludeScript("~/Areas/Admin/Content/Scripts/custom/add-webpage.js");}
@*@section JavaScriptBlock
{

    <script type="text/javascript" src="@Url.Content("~/Areas/Admin/Content/Scripts/custom/add-webpage.js")"></script>
}*@

@using (Html.BeginForm("Add", "Webpage", new { id = "" }, FormMethod.Post))
{
    
    <section class="admin-header">
        <div class="row-fluid" style="margin-bottom: 10px;">
            <div class="span4">
                <h3>Add page</h3>
            </div>
            <div class="span8">
                <div class="btn-group display-inline pull-right">
                    <input type="submit" class="btn-primary btn" value="Save and continue" />
                </div>
            </div>
        </div>
    </section>
    <div class="control-group">
        <label class="control-label">
            Page Type</label>
        <div class="controls">
            @{ //pre select radio if there is only one option
                var count = 0;
                var documentMetadatas = ViewData["DocumentTypes"] as List<DocumentMetadata>;

                if (documentMetadatas != null)
                {
                    count = documentMetadatas.Count;
                }
            }

            @foreach (var documentType in documentMetadatas)
            {
                <label class="radio">
                    <i class="@documentType.IconClass">&nbsp;</i>
                    <input id="DocumentType" name="DocumentType" type="radio" value="@documentType.TypeName" required @(count == 1 ? "checked" : "")>
                    @documentType.Name
                </label>
            }
        </div>
    </div>
    @Html.HiddenFor(x => x.Parent.Id)
    @Html.LabelFor(x => x.Name, "Page Name")
    @Html.TextBoxFor(x => x.Name, new { @class = "span12 required", autocomplete="off" })
    
    @Html.LabelFor(x => x.UrlSegment, "Url")
    @Html.TextBoxFor(x => x.UrlSegment, new { @class = "span12 required" })
    
    <label class="checkbox">
        <input type="checkbox" name="mode" id="mode" value="1" checked />  Maintain Hierarchy
    </label>
    <br />
    @Html.LabelFor(x => x.Layout)
    @Html.DropDownListFor(x => x.Layout.Id, ViewData["Layout"] as IEnumerable<SelectListItem>)
}
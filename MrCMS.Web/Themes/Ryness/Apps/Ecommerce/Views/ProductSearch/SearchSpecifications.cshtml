@using MrCMS.Web.Apps.Ecommerce.Services.Products
@model List<MrCMS.Web.Apps.Ecommerce.Models.ProductOptionModel>
@{ var query = ViewData["query"] as ProductSearchQuery;}
@if (Model.Any())
{
    <div class="filter-header">
        By Specifications
    </div>
    <div class="block-container padding-left-right-10">
        @if (Model.Any(model => model.Values.Any(valueModel => query.Specifications.Contains(valueModel.Id))))
        {
            <h5>Selected Filters</h5>
            <ul>
                @foreach (var specification in Model.Where(model => model.Values.Any(valueModel => query.Specifications.Contains(valueModel.Id))))
                {
                    var productValueModel = specification.Values.First(model => query.Specifications.Contains(model.Id));
                    <li><strong>@specification.Name: </strong>@productValueModel.Name <a href="#" data-action="remove-specification"><strong style="font-size: 14px;">&times;</strong></a><input name="Specifications" type="hidden" value="@productValueModel.Id"/></li>
                }
            </ul>
        }
        @foreach (var specification in Model.Where(model => !model.Values.Any(valueModel => query.Specifications.Contains(valueModel.Id))))
        {
            <div class="row-fluid dashed-border-bottom">
                <span>@specification.Name</span>
                <select name="Specifications" id="specifications-@specification.Id" class="span12">
                    <option value="">All</option>
                    @foreach (var option in specification.Values)
                    {
                        <option value="@option.Id"@(query.Specifications.Contains(option.Id) ? " selected=\"selected\"" : string.Empty)>
                            @option.Name
                        </option>
                    }
                </select>
            </div>
        }
    </div>
}
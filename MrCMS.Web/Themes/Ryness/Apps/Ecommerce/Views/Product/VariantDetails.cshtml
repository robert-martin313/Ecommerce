@using System.Drawing
@using MrCMS.Web.Apps.Ecommerce.Helpers
@using MrCMS.Web.Apps.Ecommerce.Models
@using MrCMS.Web.Apps.Ecommerce.Settings
@model MrCMS.Web.Apps.Ecommerce.Entities.Products.ProductVariant
@{
    var product = Model.Product;
    var backInStock = ViewData["back-in-stock"] is bool && (bool)ViewData["back-in-stock"];
}
<div class="row-fluid" id="variant-details">
    <div class="span7">
        <div class="row-fluid">
            <div class="span5">
                @{ Html.RenderPartial("ProductImages", Model); }
            </div>
            <div class="span7 product-des">
                <h1>@Editable(product, p => p.Name)</h1>
                <div class="product-price text-align-left">
                    <span>Web price</span>
                    @Model.Price.ToCurrencyFormat()

                    @if (Model.ShowPreviousPrice)
                    {
                        <span>
                            @(SiteSettings<EcommerceSettings>().PreviousPriceText) <span>@Model.PreviousPrice.Value.ToCurrencyFormat()</span>
                        </span>
                    }
                </div>

                <p>SKU: @Model.SKU</p>

                <div class="margin-bottom-10">
                    @Editable(product, p => p.Abstract, true)
                </div>

                @RenderZone("Below Product Price")
                @{Html.RenderPartial("SocialLinks");}
                <div class="padding-top-5">
                    @{
                        if (product.Brand != null)
                        {
                            if (!string.IsNullOrEmpty(product.Brand.Logo))
                            {
                        @RenderImage(product.Brand.Logo, new Size { Width = 100, Height = 50 }, alt: product.Brand.Name);
                            }
                        }
                    }
                </div>
            </div>
        </div>
    </div>
    <div class="span5">
        @if (product.IsMultiVariant)
        {
            <div class="row-fluid border-each margin-top-bottom-10 add-to-cart">
                <div class="span12 padding-10">
                    <div class="row-fluid">
                        <div class="span4">Variants</div>
                        <div class="span8">
                            @Html.DropDownList("variant", product.GetVariantOptions(Model), new { @class = "span12 variantdropdown" })
                        </div>
                    </div>
                </div>
            </div>
        }
        @{Html.RenderPartial("ProductPricebreaks", Model);}
        <!-- product add to cart start -->
        @if (Model.TrackingPolicy == TrackingPolicy.Track && Model.StockRemaining <= 0)
        {
            if (backInStock)
            {
            <div class="alert alert-success margin-top-10">
                Thank you, you will be notified when this product is back in stock.
            </div>
            }
            else
            {
            <div class="row-fluid margin-top-bottom-10 out-of-stock">
                <p class="text-align-center red">
                    Sorry, this item is out of stock.
                </p>
                @using (Html.BeginForm("BackInStock", "Product", FormMethod.Post))
                {
                    <div class="span6 padding-left-10">
                        @Html.Hidden("ProductVariant.Id", Model.Id)
                        @Html.TextBox("Email", "", new { placeholder = "Email address", @class = "span12" })
                    </div>
                    <div class="span6 padding-right-10">
                        <input type="submit" class="generic-button red-gradient span12" value="Email me when back in stock" />
                    </div>
                }
            </div>
            }
        }
        else
        {
            using (Html.BeginForm("AddToCart", "Cart", FormMethod.Post))
            {
            @Html.Hidden("Id", Model.Id)
            <div class="row-fluid border-each margin-top-bottom-10 add-to-cart" id="product-addtobasket">
                <div class="span12 padding-10">
                    <div class="row-fluid">
                        <div class="span2">
                            <span class="hidden-tablet">Quantity</span>
                            <span class="hidden-desktop hidden-phone">Qty</span>
                        </div>
                        <div class="span2">
                            <div class="row-fluid">
                                <input type="text" class="span12" value="1" id="quantity" name="quantity" />
                            </div>
                        </div>
                        <div class="span8">
                            <div class="row-fluid">
                                <button class="generic-button red-gradient span12" type="submit">Add to basket</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            }
        }
        <!-- product add to cart end -->
        @RenderZone("Below Add to cart")
    </div>
</div>


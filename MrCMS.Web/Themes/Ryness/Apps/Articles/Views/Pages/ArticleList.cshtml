@using MrCMS.Entities.Documents
@using MrCMS.Helpers
@using MrCMS.Web.Apps.Articles.Pages
@using MrCMS.Website
@using NHibernate.Criterion
@model ArticleList
<div class="textpage padding-top-20">
    <div class="container">
        <div class="content">

            @Editable(Model, p => p.BodyContent, true)

            @{
                var category = Request["Category"];

                var query = QueryOver.Of<Article>()
                                                 .Where(a => a.Parent == Model && a.PublishOn != null && a.PublishOn <= CurrentRequestData.Now)
                                                 .ThenBy(arg => arg.PublishOn)
                                                 .Desc;

                if (!String.IsNullOrEmpty(category))
                {
                    Tag tagAlias = null;
                    query = query.JoinAlias(article => article.Tags, () => tagAlias).Where(() => tagAlias.Name.IsInsensitiveLike(category, MatchMode.Exact));
                }


                var pagedList = Model.PagedChildren<Article>(pageNum: Request["p"].GetIntValue(1), query: query, pageSize: Model.PageSize);
            }
            @foreach (var page in pagedList)
            {
                <div class="row-fluid">
                    <div class="span12">
                        <h3 class="margin-top-0"><a href="/@page.LiveUrlSegment" class="margin-top-0">@page.Name </a></h3>
                        @page.CreatedOn.Day @page.CreatedOn.ToString("MMMMM") @page.CreatedOn.Year

                        @if (!String.IsNullOrEmpty(page.FeatureImage))
                        {
                            <a href="/@page.LiveUrlSegment" class="margin-top-0">
                                <img src="@page.FeatureImage" alt=""/></a>
                        }
                        @Editable(page, p => p.Abstract)
                        <a href="/@page.LiveUrlSegment">Read More</a>
                    </div>
                </div>
                <hr />
            }
            @if (Model.AllowPaging)
            {
                @Html.PageCurrentPage(pagedList, i => new { p = i }, PagedListRenderOptions.PageNumbersOnly)
            }
        </div>
    </div>
</div>